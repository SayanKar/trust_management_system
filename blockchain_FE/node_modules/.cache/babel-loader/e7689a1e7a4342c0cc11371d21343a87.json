{"ast":null,"code":"import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = {};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  const selector = function () {\n    for (var _len2 = arguments.length, selectorArgs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      selectorArgs[_key2] = arguments[_key2];\n    }\n\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.cache = cache;\n  return selector;\n};","map":{"version":3,"names":["createSelector","reselectCreateSelector","buildWarning","cache","missingInstanceIdWarning","args","selector","selectorArgs","stateOrApiRef","instanceId","isApiRef","current","cacheKey","state","process","env","NODE_ENV","get","newSelector","Map","set"],"sources":["/Users/yashkothari/project/blockchain_project/node_modules/@mui/x-data-grid/utils/createSelector.js"],"sourcesContent":["import { createSelector as reselectCreateSelector } from 'reselect';\nimport { buildWarning } from './warning';\nconst cache = {};\nconst missingInstanceIdWarning = buildWarning(['MUI: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, e.g. `mySelector(apiRef)`, or pass the instance ID explicitly, e.g `mySelector(state, apiRef.current.instanceId)`.']);\nexport const createSelector = (...args) => {\n  const selector = (...selectorArgs) => {\n    const [stateOrApiRef, instanceId] = selectorArgs;\n    const isApiRef = !!stateOrApiRef.current;\n    const cacheKey = isApiRef ? stateOrApiRef.current.instanceId : instanceId != null ? instanceId : 'default';\n    const state = isApiRef ? stateOrApiRef.current.state : stateOrApiRef;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey === 'default') {\n        missingInstanceIdWarning();\n      }\n    }\n\n    if (cache[cacheKey] && cache[cacheKey].get(args)) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cache[cacheKey].get(args)(state, cacheKey);\n    }\n\n    const newSelector = reselectCreateSelector(...args);\n\n    if (!cache[cacheKey]) {\n      cache[cacheKey] = new Map();\n    }\n\n    cache[cacheKey].set(args, newSelector);\n    return newSelector(state, cacheKey);\n  }; // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n\n\n  selector.cache = cache;\n  return selector;\n};"],"mappings":"AAAA,SAASA,cAAc,IAAIC,sBAA3B,QAAyD,UAAzD;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,MAAMC,KAAK,GAAG,EAAd;AACA,MAAMC,wBAAwB,GAAGF,YAAY,CAAC,CAAC,2GAAD,EAA8G,mJAA9G,CAAD,CAA7C;AACA,OAAO,MAAMF,cAAc,GAAG,YAAa;EAAA,kCAATK,IAAS;IAATA,IAAS;EAAA;;EACzC,MAAMC,QAAQ,GAAG,YAAqB;IAAA,mCAAjBC,YAAiB;MAAjBA,YAAiB;IAAA;;IACpC,MAAM,CAACC,aAAD,EAAgBC,UAAhB,IAA8BF,YAApC;IACA,MAAMG,QAAQ,GAAG,CAAC,CAACF,aAAa,CAACG,OAAjC;IACA,MAAMC,QAAQ,GAAGF,QAAQ,GAAGF,aAAa,CAACG,OAAd,CAAsBF,UAAzB,GAAsCA,UAAU,IAAI,IAAd,GAAqBA,UAArB,GAAkC,SAAjG;IACA,MAAMI,KAAK,GAAGH,QAAQ,GAAGF,aAAa,CAACG,OAAd,CAAsBE,KAAzB,GAAiCL,aAAvD;;IAEA,IAAIM,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACzC,IAAIJ,QAAQ,KAAK,SAAjB,EAA4B;QAC1BR,wBAAwB;MACzB;IACF;;IAED,IAAID,KAAK,CAACS,QAAD,CAAL,IAAmBT,KAAK,CAACS,QAAD,CAAL,CAAgBK,GAAhB,CAAoBZ,IAApB,CAAvB,EAAkD;MAChD;MACA;MACA,OAAOF,KAAK,CAACS,QAAD,CAAL,CAAgBK,GAAhB,CAAoBZ,IAApB,EAA0BQ,KAA1B,EAAiCD,QAAjC,CAAP;IACD;;IAED,MAAMM,WAAW,GAAGjB,sBAAsB,CAAC,GAAGI,IAAJ,CAA1C;;IAEA,IAAI,CAACF,KAAK,CAACS,QAAD,CAAV,EAAsB;MACpBT,KAAK,CAACS,QAAD,CAAL,GAAkB,IAAIO,GAAJ,EAAlB;IACD;;IAEDhB,KAAK,CAACS,QAAD,CAAL,CAAgBQ,GAAhB,CAAoBf,IAApB,EAA0Ba,WAA1B;IACA,OAAOA,WAAW,CAACL,KAAD,EAAQD,QAAR,CAAlB;EACD,CA1BD,CADyC,CA2BtC;EACH;;;EAGAN,QAAQ,CAACH,KAAT,GAAiBA,KAAjB;EACA,OAAOG,QAAP;AACD,CAjCM"},"metadata":{},"sourceType":"module"}