{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridEvents } from '../../models/events';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent(GridEvents.resize, size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };","map":{"version":3,"names":["React","PropTypes","GridEvents","useGridApiContext","GridMainContainer","GridAutoSizer","GridOverlays","useGridRootProps","useGridSelector","gridDensityHeaderHeightSelector","jsx","_jsx","jsxs","_jsxs","GridBody","props","children","VirtualScrollerComponent","ColumnHeadersComponent","apiRef","rootProps","headerHeight","isVirtualizationDisabled","setIsVirtualizationDisabled","useState","disableVirtualization","useCallback","enableVirtualization","current","unstable_disableVirtualization","unstable_enableVirtualization","columnHeadersRef","useRef","columnsContainerRef","windowRef","renderingZoneRef","columnHeadersContainerElementRef","columnHeadersElementRef","handleResize","size","publishEvent","resize","ref","innerRef","nonce","disableHeight","autoHeight","onResize","style","width","height","marginTop","process","env","NODE_ENV","propTypes","node","elementType","isRequired"],"sources":["/Users/yashkothari/project/blockchain_project/node_modules/@mui/x-data-grid/components/base/GridBody.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridEvents } from '../../models/events';\nimport { useGridApiContext } from '../../hooks/utils/useGridApiContext';\nimport { GridMainContainer } from '../containers/GridMainContainer';\nimport { GridAutoSizer } from '../GridAutoSizer';\nimport { GridOverlays } from './GridOverlays';\nimport { useGridRootProps } from '../../hooks/utils/useGridRootProps';\nimport { useGridSelector } from '../../hooks/utils/useGridSelector';\nimport { gridDensityHeaderHeightSelector } from '../../hooks/features/density/densitySelector';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction GridBody(props) {\n  const {\n    children,\n    VirtualScrollerComponent,\n    ColumnHeadersComponent\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const headerHeight = useGridSelector(apiRef, gridDensityHeaderHeightSelector);\n  const [isVirtualizationDisabled, setIsVirtualizationDisabled] = React.useState(rootProps.disableVirtualization);\n  const disableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(true);\n  }, []);\n  const enableVirtualization = React.useCallback(() => {\n    setIsVirtualizationDisabled(false);\n  }, []); // The `useGridApiMethod` hook can't be used here, because it only installs the\n  // method if it doesn't exist yet. Once installed, it's never updated again.\n  // This break the methods above, since their closure comes from the first time\n  // they were installed. Which means that calling `setIsVirtualizationDisabled`\n  // will trigger a re-render, but it won't update the state. That can be solved\n  // by migrating the virtualization status to the global state.\n\n  apiRef.current.unstable_disableVirtualization = disableVirtualization;\n  apiRef.current.unstable_enableVirtualization = enableVirtualization;\n  const columnHeadersRef = React.useRef(null);\n  const columnsContainerRef = React.useRef(null);\n  const windowRef = React.useRef(null);\n  const renderingZoneRef = React.useRef(null);\n  apiRef.current.columnHeadersContainerElementRef = columnsContainerRef;\n  apiRef.current.columnHeadersElementRef = columnHeadersRef;\n  apiRef.current.windowRef = windowRef; // TODO rename, it's not attached to the window anymore\n\n  apiRef.current.renderingZoneRef = renderingZoneRef; // TODO remove, nobody should have access to internal parts of the virtualization\n\n  const handleResize = React.useCallback(size => {\n    apiRef.current.publishEvent(GridEvents.resize, size);\n  }, [apiRef]);\n  return /*#__PURE__*/_jsxs(GridMainContainer, {\n    children: [/*#__PURE__*/_jsx(GridOverlays, {}), /*#__PURE__*/_jsx(ColumnHeadersComponent, {\n      ref: columnsContainerRef,\n      innerRef: columnHeadersRef\n    }), /*#__PURE__*/_jsx(GridAutoSizer, {\n      nonce: rootProps.nonce,\n      disableHeight: rootProps.autoHeight,\n      onResize: handleResize,\n      children: size => {\n        const style = {\n          width: size.width,\n          // If `autoHeight` is on, there will be no height value.\n          // In this case, let the container to grow whatever it needs.\n          height: size.height ? size.height - headerHeight : 'auto',\n          marginTop: headerHeight\n        };\n        return /*#__PURE__*/_jsx(VirtualScrollerComponent, {\n          ref: windowRef,\n          style: style,\n          disableVirtualization: isVirtualizationDisabled\n        });\n      }\n    }), children]\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? GridBody.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  ColumnHeadersComponent: PropTypes.elementType.isRequired,\n  VirtualScrollerComponent: PropTypes.elementType.isRequired\n} : void 0;\nexport { GridBody };"],"mappings":"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"},"metadata":{},"sourceType":"module"}